<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-NVSP8IV" ignored="0" name="MobileTest" tests="1" failures="0" timestamp="2019-10-17T15:04:23 IDT" time="0.182" errors="0">
  <testcase name="@BeforeTest beforeClass" time="0.158" classname="Utilities.CommonOps">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Unable to create a new remote session. Please check the server log for more details. Original error: Unable to parse remote response: 
Build info: version: &amp;apos;3.141.5&amp;apos;, revision: &amp;apos;d54ebd709a&amp;apos;, time: &amp;apos;2018-11-06T11:58:41&amp;apos;
System info: host: &amp;apos;DESKTOP-NVSP8IV&amp;apos;, ip: &amp;apos;192.168.1.17&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_161&amp;apos;
Driver info: driver.version: AndroidDriver">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to create a new remote session. Please check the server log for more details. Original error: Unable to parse remote response: 
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:58:41'
System info: host: 'DESKTOP-NVSP8IV', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:208)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:95)
at Utilities.CommonOps.initMobile(CommonOps.java:119)
at Utilities.CommonOps.beforeClass(CommonOps.java:203)
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
... 38 more
Caused by: org.openqa.selenium.WebDriverException: Unable to parse remote response: 
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:112)
... 43 more
Caused by: org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read: 
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:58:41'
System info: host: 'DESKTOP-NVSP8IV', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: driver.version: AndroidDriver
at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:290)
at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:220)
at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64)
at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:145)
at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:126)
at org.openqa.selenium.json.Json.toType(Json.java:69)
at org.openqa.selenium.json.Json.toType(Json.java:55)
at org.openqa.selenium.json.Json.toType(Json.java:50)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:109)
... 43 more
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeClass -->
  <testcase name="@BeforeMethod dobeforetest" time="-1.571313862967E9" classname="Utilities.CommonOps">
    <skipped/>
  </testcase> <!-- @BeforeMethod dobeforetest -->
  <testcase name="@AfterMethod doaftertest" time="-1.571313862973E9" classname="Utilities.CommonOps">
    <skipped/>
  </testcase> <!-- @AfterMethod doaftertest -->
  <testcase name="@AfterTest afterClass" time="-1.571313862977E9" classname="Utilities.CommonOps">
    <skipped/>
  </testcase> <!-- @AfterTest afterClass -->
  <testcase name="test01_veriffyCalculator" time="0.0" classname="Tests.AppiumCalculatorAppTests">
    <skipped/>
  </testcase> <!-- test01_veriffyCalculator -->
</testsuite> <!-- MobileTest -->
